Caribbean Cruise
Problem Description
Deepthi loves cruises. She is going to visit the Caribbean on a Cruise. So, she thought of providing everyone who is traveling with her with lunch as well.
Each food item is denoted by an integer ID. A lunchbox contains exactly A food items. She has a list of food items with her denoted by an integer array B. She asked you to tell her the maximum number of lunchboxes she can prepare.
Note: A lunch box can contain multiple same kinds of food items but the content of each lunch box should be the same.


Problem Constraints
1 <= A <= |B| <= 100000
1 <= B[i] <= 100000


Input Format
First argument of input is integer A
Second argument of input is an integer array B


Output Format
Return a single integer denoting the maximum number of lunch boxes that can be prepared.


Example Input
Input 1:
A = 3, B = [1, 2, 3, 2, 6, 1, 3]
Input 2:
A = 4, B = [1, 3, 1, 3, 10, 3, 6, 6, 13]


Example Output
Output 1:
2
Output 2:
1


Example Explanation
Explanation 1:
She can choose the content to be [1, 2, 3] and prepare 2 luchboxes
Explanation 2:
She can choose the content to be [1, 3, 3, 3]
int Solution::solve(int A, vector<int> &B) {
    map<int,int> mymap;
    for(int x:B)
        mymap[x]++;
    int lo=1,hi=B.size(),ans;
    while(lo<=hi)
    {
        int mid=(lo+hi)/2,cnt=0;
        for(auto abc:mymap)
        {
            cnt+=abc.second/mid;
        }
        if(cnt>=A)
        {
            ans=mid;
            lo=mid+1;
        }
        else
        {
            hi=mid-1;
        }
    }
    return ans;
}
class Solution:
    # @param A : integer
    # @param B : list of integers
    # @return an integer
    def solve(self, A, B):
        mymp={}
        for i in B:
            if i in mymp:
                mymp[i]+=1
            else:
                mymp[i]=1
        lo,hi,ans=1,len(B),1
        while lo<=hi:
            mid=(lo+hi)//2
            cnt=0
            for k in mymp:
                cnt+=mymp[k]//mid
            if cnt>=A:
                ans=mid
                lo=mid+1
            else:
                hi=mid-1
        return ans
