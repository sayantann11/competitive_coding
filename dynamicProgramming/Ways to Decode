Ways to Decode
Problem Description

A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given an encoded message denoted by string A containing digits, determine the total number of ways to decode it modulo 109 + 7.

.



Problem Constraints
1 <= length(A) <= 105



Input Format
The first and the only argument is a string A.



Output Format
Return an integer, representing the number of ways to decode the string modulo 109 + 7..



Example Input
Input 1:

 A = "12"
Input 2:

 A = "8"


Example Output
Output 1:

 2
Output 2:

 1


Example Explanation
Explanation 1:

 Given encoded message "8", it could be decoded as only "H" (8).
 The number of ways decoding "8" is 1.
Explanation 2:

 Given encoded message "12", it could be decoded as "AB" (1, 2) or "L" (12).
 The number of ways decoding "12" is 2.
 
 solutions
 const int mod = 1000000007;
const int maxn = 100009;
int dp[maxn];
int solve(int index, string & A) {
  if (index >= A.size())
    return 1;
  if (dp[index] != -1)
    return dp[index];
  if (A[index] == '0')
    return dp[index] = 0;
  int ans = solve(index + 1, A);
  ans %= mod;
  if (index + 1 < A.size()) {
    int num = ((A[index] - '0') * 10) + (A[index + 1] - '0');
    if (num >= 10 && num <= 26)
      ans += solve(index + 2, A);
    ans %= mod;
  }
  return dp[index] = ans;
  ans %= mod;
}
int Solution::numDecodings(string A) {
  memset(dp, -1, sizeof(dp));
  return solve(0, A);
}
