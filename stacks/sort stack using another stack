Sort stack using another stack
Problem Description

Given a stack of integers A, sort it using another stack.

Return the array of integers after sorting the stack using another stack.



Problem Constraints
1 <= |A| <= 5000

0 <= A[i] <= 1000000000



Input Format
The only argument given is the integer array A.



Output Format
Return the array of integers after sorting the stack using another stack.



Example Input
Input 1:

 A = [5, 4, 3, 2, 1]
Input 2:

 A = [5, 17, 100, 11]


Example Output
Output 1:

 [1, 2, 3, 4, 5]
Output 2:

 [5, 11, 17, 100]


Example Explanation
Explanation 1:

 Just sort the given numbers.
Explanation 2:

 Just sort the given numbers.
 solution:
 vector<int> Solution::solve(vector<int> &A) {
    if(A.size()==1)return A;
    stack<int>stk,helper;
    for(int i=0;i<A.size();i++)
    {
        stk.push(A[i]);
        
    }
    while(!stk.empty())
    {
        int temp = stk.top();
        stk.pop();
        while(!helper.empty() && helper.top() > temp)
        {
            stk.push(helper.top());
            helper.pop();
        }
        helper.push(temp);
        
        
    }
     while (!helper.empty()) {
    stk.push(helper.top());
    helper.pop();
  }
  vector < int > arr;
  while (!stk.empty()) {
    arr.push_back(stk.top());
    stk.pop();
  }
  return arr;
}
